package projecteuler.problems;

/**
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem2 extends Problem {

	private int maxNumber;
	
	public Problem2() {
		this(4000000);
	}
	
	public Problem2(int num) {
		maxNumber = num;
	}
	
	@Override
	String execute() {
		return new Integer(sumOfEvenFibs(maxNumber)).toString();
	}

	public String getProblemStatement() {
		return "Finding the sum of the even-valued terms in the Fibonacci sequence whose values do not exceed " + maxNumber;
	}
	
	private int sumOfEvenFibs(int maxFib) {
		int total = 2;
		
		if(maxFib < 2)
			return 0;
		
		int currentFib = 3;
		int lastFib = 2;
		int nextFib = lastFib + currentFib;
		while(nextFib < maxFib) {
			
			lastFib = currentFib;
			currentFib = nextFib;
			if(nextFib % 2 == 0) {
				debug("Adding " + nextFib);
				total += nextFib;
			}
			nextFib = lastFib + currentFib;
		}
		
		return total;
	}
}
